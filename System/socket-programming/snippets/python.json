{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Server": {
		"prefix": "server",
		"body": [
			"#!/usr/bin/env python3",
			"import socket",
			"import sys",
			"",
			"if len(sys.argv) != 2:",
			"    print(\"Usage: python server.py <port>\")",
			"    sys.exit(1)",
			"",
			"HOST = '127.0.0.1'",
			"PORT = int(sys.argv[1])",
			"",
			"with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:",
			"    s.bind((HOST, PORT))",
			"    s.listen()",
			"    print(f'Server in ascolto su {HOST}:{PORT}')",
			"    conn, addr = s.accept()",
			"    with conn:",
			"        print('Connessione da', addr)",
			"        data = conn.recv(1024)",
			"        if not data:",
			"            print('Nessun dato ricevuto')",
			"        else:",
			"            print('Ricevuto:', data.decode())",
			"            conn.sendall(b'Hello from server')"
		]
	},
	"Client": {
		"prefix": "client",
		"body": [
			"#!/usr/bin/env python3",
			"import socket",
			"import sys",
			"",
			"if len(sys.argv) != 3:",
			"    print(\"Usage: python client.py <host> <port>\")",
			"    sys.exit(1)",
			"",
			"HOST = sys.argv[1]",
			"PORT = int(sys.argv[2])",
			"",
			"with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:",
			"    s.connect((HOST, PORT))",
			"    s.sendall(b'Hello from client')",
			"    data = s.recv(1024)",
			"    print('Ricevuto dal server:', data.decode())"
		]
	}
}